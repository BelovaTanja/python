'''
Задание 1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя,
а указать явно, в программе.
'''

my_list = [None, 25,  25.5, ['a', 'b', 'c', 'd', 'i', 'f', 'g'], 'Type', False]
def my_type(el):
    for el in range(len(my_list)):
        print(type(my_list[el]))
    return
my_type(my_list)


'''
Задание 2. Для списка реализовать обмен значений соседних элементов. 
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д. 
При нечётном количестве элементов последний сохранить на своём месте. 
Для заполнения списка элементов нужно использовать функцию input().
'''

list_count = int(input("Введите количество элементов списка "))
my_list = []
i = 0
el = 0
while i < list_count:
    my_list.append(input("Введите следующее значение списка "))
    i += 1

for elem in range(int(len(my_list)/2)):
        my_list[el], my_list[el + 1] = my_list [el + 1], my_list[el]
        el += 2
print(my_list)



'''
Задание 3. ользователь вводит месяц в виде целого числа от 1 до 12. 
Сообщить, к какому времени года относится месяц (зима, весна, лето, осень). 
Напишите решения через list и dict.
'''

seasons_list = ['winter', 'spring', 'summer', 'autumn']
seasons_dict = {1 : 'winter', 2 : 'spring', 3 : 'summer', 4 : 'autumn'}
month = int(input("Введите месяц по номеру "))
if month == 12 or month == 1 or month == 2:
    print(seasons_dict.get(1))
    print(seasons_list[0])
elif month == 3 or month == 4 or month == 5:
    print(seasons_dict.get(2))
    print(seasons_list[1])
elif month == 6 or month == 7 or month == 8:
    print(seasons_dict.get(3))
    print(seasons_list[2])
elif month == 9 or month == 10 or month == 11:
    print(seasons_dict.get(4))
    print(seasons_list[3])
else:
    print("Введён несуществующий месяц")


'''
Задание 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. 
Вывести каждое слово с новой строки. Строки нужно пронумеровать. 
Если слово длинное, выводить только первые 10 букв в слове.
'''

my_str = input("введите строку ")
my_word = []
num = 1
for el in range(my_str.count(' ') + 1):
    my_word = my_str.split()
    if len(str(my_word)) <= 10:
        print(f" {num} {my_word [el]}")
        num += 1
    else:
        print(f" {num} {my_word [el] [0:10]}")
        num += 1


'''
Задание 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, 
который не возрастает. У пользователя нужно запрашивать новый элемент рейтинга. 
Если в рейтинге существуют элементы с одинаковыми значениями, 
то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
'''
my_list = [7, 5, 3, 3, 2]
print(f"Рейтинг - {my_list}")
rating = int(input("Введите число (введите 00 для завершения ввода) "))
while rating != 00:
    for el in range(len(my_list)):
        if my_list[el] == rating:
            my_list.insert(el + 1, rating)
            break
        elif my_list[0] < rating:
            my_list.insert(0, rating)
        elif my_list[-1] > rating:
            my_list.append(rating)
        elif my_list[el] > rating and my_list[el + 1] < rating:
            my_list.insert(el + 1, rating)
    print(f"текущий список - {my_list}")
    rating = int(input("Введите число "))



'''
Задание 6. Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. 
Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — 
номер товара и словарь с параметрами, то есть характеристиками товара: название, цена, количество, 
единица измерения. Структуру нужно сформировать программно, запросив все данные у пользователя.
Пример готовой структуры:

[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]

Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — 
характеристика товара, например, название. Тогда значение — список значений-характеристик, 
например, список названий товаров.

{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}
'''

products = []
elements = {'название': '', 'цена': '', 'количество': '', 'eд': ''}
data = {'название': [], 'цена': [], 'количество': [], 'eд': []}
num = 0
element_ = None
control = None
while True:
    control = input("For quit press 'Z', for continue press 'Enter', for analytics press 'D'").upper()
    if control == 'Z':
        break
    num += 1
    if control == 'D':
        for key, value in data.items():
            print(f'{key}: {value}')
    for f in elements.keys():
        element_ = input(f'Input feature "{f}"')
        elements[f] = int(element_) if (f == 'цена' or f == 'количество') else element_
        data[f].append(elements[f])
    products.append((num, elements))
