'''
Задание 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
'''


def div(*args):

    try:
        arg1 = int(input("Введите делимое "))
        arg2 = int(input("Введите делитель "))
        res = arg1 / arg2
    except ValueError:
        return 'Value error'
    except ZeroDivisionError:
        return "Неверная операция! Вы не можите делть на ноль"

    return res

print(f'result  {div()}')



'''
Задание 2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя:
имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры 
как именованные аргументы. Осуществить вывод данных о пользователе одной строкой.
'''

def my_func (name, surname, year, city, email, telephone):
    return ' '.join([name, surname, year, city, email, telephone])
print(my_func(name = 'Таня', surname = 'Белова', year = '1993', city = 'Нижний Новгород', email = '123456@gmail.ru', telephone = '8-910-100-10-10'))



'''
Задание 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает 
сумму наибольших двух аргументов.
'''

def my_func(arg1 , arg2, arg3):
    if arg1 >= arg3 and arg2 >= arg3:
        return arg1 + arg2
    elif arg1 > arg2 and arg1 < arg3:
        return arg1 + arg3
    else:
        return arg2 + arg3

print(f'Сумма наибольших аргументов - {my_func(int(input("укажите первый аргумент ")), int(input("укажите второй аргумент ")), int(input("укажите третий аргумент ")))}')



'''
Задание 4. Программа принимает действительное положительное число x и целое отрицательное число y. 
Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y). 
При решении задания нужно обойтись без встроенной функции возведения числа в степень.
'''

def my_func(x, y):
    return 1 / x ** abs(y)
print(my_func(5, -2))



'''
Задание 5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. 
При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, 
разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться 
к уже подсчитанной сумме. 
Но если вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел 
к полученной ранее сумме и после этого завершить программу.
'''

def my_sum ():
    sum_res = 0
    ex = False
    while ex == False:
        number = input('введите числа или нажмите Z для выхода - ').split()

        res = 0
        for el in range(len(number)):
            if number[el] == 'q' or number[el] == 'Z':
                ex = True
                break
            else:
                res = res + int(number[el])
        sum_res = sum_res + res
        print(f'текущая сумма {sum_res}')
    print(f'итоговый результат суммирования {sum_res}')

my_sum()



'''
Задание 6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, 
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
И
Задание 7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод исходной строки, 
но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().
'''

def int_func (*args):
    word = input("Input words ")
    print(word.title())
    return
int_func()

